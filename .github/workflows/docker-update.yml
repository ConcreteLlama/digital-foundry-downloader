name: Docker Update

on:
  push:
    branches:
    - main
    - develop
    - experimental

jobs:
  update-dockerhub:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Extract version from package.json
      id: version
      run: |
        VERSION=$(grep -m1 '"version"' package.json | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Set Docker image tags
      id: set_tags
      run: |
        if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
          TAG="latest"
          VERSION_TAG="v${VERSION}"
        elif [ "${GITHUB_REF}" == "refs/heads/develop" ]; then
          TAG="development"
          VERSION_TAG="v${VERSION}-development"
        else
          TAG="experimental"
          VERSION_TAG="v${VERSION}-experimental"
        fi
        echo "TAG=${TAG}" >> $GITHUB_ENV
        echo "VERSION_TAG=${VERSION_TAG}" >> $GITHUB_ENV

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ${{ vars.DOCKERHUB_USERNAME }}/digital-foundry-downloader:${{ env.TAG }}
          ${{ vars.DOCKERHUB_USERNAME }}/digital-foundry-downloader:${{ env.VERSION_TAG }}
        labels: |
          version=${{ env.VERSION }}
        build-args: |
          GIT_BRANCH=${{ github.ref_name }}